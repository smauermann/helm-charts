name: Lint and Test Charts

on:
  pull_request:
    branches:
      - main

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0
        with:
          yamale_version: "6.0.0"

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --validate-maintainers=false

      - name: Run helm template (render check)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          set -euo pipefail
          for chart in $(ct list-changed --target-branch ${{ github.event.repository.default_branch }}); do
            values_dir="$chart/ci"
            if [[ ! -d "$values_dir" ]]; then
              echo "Skipping $chart because $values_dir does not exist"
              continue
            fi

            base_values=""
            if [[ -f "$values_dir/base-values.yaml" ]]; then
              base_values="$values_dir/base-values.yaml"
              echo "Testing template rendering for $chart with $(basename "$base_values")"
              helm template test-release "$chart" --debug --dry-run -f "$base_values"
            fi

            shopt -s nullglob
            for values_file in "$values_dir"/*.yaml; do
              if [[ "$values_file" == "$base_values" ]]; then
                continue
              fi

              echo "Testing template rendering for $chart with $(basename "$values_file")"
              if [[ -n "$base_values" ]]; then
                helm template test-release "$chart" --debug --dry-run -f "$base_values" -f "$values_file"
              else
                helm template test-release "$chart" --debug --dry-run -f "$values_file"
              fi
            done
            shopt -u nullglob
          done
